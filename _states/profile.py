# -*- coding: utf-8 -*-
'''
create and install configuration profiles.

 .. code-block:: yaml

    com.example.profileidentifier:
        profile:
            - installed
            - description: This description is shown underneath the display name
            - displayname: Salt-OSX Example Profile
            - organization: Salt-OSX Inc.
            - removaldisallowed: False
            - content:
                ...

'''
import logging
import salt.utils
import salt.exceptions


log = logging.getLogger(__name__)
__virtualname__ = 'profile'


def __virtual__():
    return __virtualname__ if salt.utils.platform.is_darwin() else False


def installed(name, force=None, **kwargs):
    '''
    Create and install the specified configuration profile, using the supplied payload content.
    This state module is not intended to be used at the command line.

    name:
        The name of the resource is the payload identifier, which is used to determine whether the payload is
        installed.

    force:
        True or False, will overwrite existing profile with the same name.

    Keyword Arguments:

        description:
            Description shown below profile name in profile preferences.

        displayname:
            The main title shown that identifies the profile.

        organization:
            The organization responsible for creating the profile.

        removaldisallowed:
            Whether or not to disallow removal of this profile.

        content:
            The payload data contained within this profile. Should be generated by another formula.
    '''
    ret = {'name': name,
           'result': True,
           'changes': {},
           'comment': ''}

    exists = __salt__['profile.exists'](name)

    if exists and force:
        ret['comment'] = 'Profile already installed with identifier, will be overwritten: {0}'.format(name)
    elif exists:
        ret['comment'] = 'Profile already installed with identifier: {0}'.format(name)
        return ret


    content = __salt__['profile.generate'](
        name,
        None,
        **kwargs
    )

    mcpath = salt.utils.files.mkstemp(suffix='mobileconfig', prefix='salt')
    f = open(mcpath, "w")
    f.write(content)
    f.close()

    log.debug('Wrote .mobileconfig in secure temporary location: {}'.format(mcpath))

    if __opts__['test']:
        ret['result'] = None
        ret['comment'] = 'New profile would have been generated, property list follows: {0}'.format(content)
        return ret
    else:
        success = __salt__['profile.install'](mcpath)
        ret['result'] = success
        if success:
            ret['comment'] = 'Profile with identifier:{0} installed successfully.'.format(name)
        else:
            ret['comment'] = 'Failed to install profile with identifier:{0}'.format(name)

        return ret


def absent(name):
    '''
    Remove the configuration profile with the specified identifier.
    '''
    ret = {'name': name,
           'result': True,
           'changes': {},
           'comment': ''}

    exists = __salt__['profile.exists'](name)

    if not exists:
        ret['comment'] = 'Profile is already absent'
        return ret

    if __opts__['test']:
        ret['result'] = None
        ret['comment'] = 'Profile with identifier: {0} would have been removed.'.format(name)
        return ret
    else:
        success = __salt__['profile.remove'](name)
        ret['result'] = success
        if success:
            ret['comment'] = 'Profile with identifier: {0} successfully removed'.format(name)
        else:
            ret['comment'] = 'Failed to remove profile with identifier: {0}'.format(name)

        return ret
